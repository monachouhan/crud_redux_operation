[{"/Users/ampleworks/Documents/register_login_redux/my-app/src/index.js":"1","/Users/ampleworks/Documents/register_login_redux/my-app/src/App.js":"2","/Users/ampleworks/Documents/register_login_redux/my-app/src/reportWebVitals.js":"3","/Users/ampleworks/Documents/register_login_redux/my-app/src/store/index.js":"4","/Users/ampleworks/Documents/register_login_redux/my-app/src/constants/actionTypes.js":"5","/Users/ampleworks/Documents/register_login_redux/my-app/src/screens/Register.js":"6","/Users/ampleworks/Documents/register_login_redux/my-app/src/screens/Login.js":"7","/Users/ampleworks/Documents/register_login_redux/my-app/src/utils/Regex.js":"8","/Users/ampleworks/Documents/register_login_redux/my-app/src/reducers/user.js":"9","/Users/ampleworks/Documents/register_login_redux/my-app/src/screens/Home.js":"10","/Users/ampleworks/Documents/register_login_redux/my-app/src/actions/user.js":"11","/Users/ampleworks/Documents/register_login_redux/my-app/src/api/api.js":"12","/Users/ampleworks/Documents/register_login_redux/my-app/src/api/config.js":"13","/Users/ampleworks/Documents/register_login_redux/my-app/src/screens/AddItem.js":"14","/Users/ampleworks/Documents/register_login_redux/my-app/src/screens/ViewList.js":"15","/Users/ampleworks/Documents/register_login_redux/my-app/src/reducers/additem.js":"16","/Users/ampleworks/Documents/register_login_redux/my-app/src/screens/Dashboard.js":"17","/Users/ampleworks/Documents/register_login_redux/my-app/src/screens/UserProfile.js":"18","/Users/ampleworks/Documents/register_login_redux/my-app/src/screens/Edit.js":"19","/Users/ampleworks/Documents/register_login_redux/my-app/src/screens/ViewUser.js":"20","/Users/ampleworks/Documents/register_login_redux/my-app/src/utils/PrivateRoute.js":"21"},{"size":995,"mtime":1658914222635,"results":"22","hashOfConfig":"23"},{"size":1561,"mtime":1660714032514,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1658463059387,"results":"25","hashOfConfig":"23"},{"size":685,"mtime":1659096148961,"results":"26","hashOfConfig":"23"},{"size":302,"mtime":1659434183002,"results":"27","hashOfConfig":"23"},{"size":6522,"mtime":1659434999620,"results":"28","hashOfConfig":"23"},{"size":2455,"mtime":1659426080397,"results":"29","hashOfConfig":"23"},{"size":267,"mtime":1659072734979,"results":"30","hashOfConfig":"23"},{"size":1436,"mtime":1659437747167,"results":"31","hashOfConfig":"23"},{"size":617,"mtime":1660645473240,"results":"32","hashOfConfig":"23"},{"size":4023,"mtime":1659437800225,"results":"33","hashOfConfig":"23"},{"size":1487,"mtime":1659079480523,"results":"34","hashOfConfig":"23"},{"size":538,"mtime":1659435181979,"results":"35","hashOfConfig":"23"},{"size":6897,"mtime":1659504694093,"results":"36","hashOfConfig":"23"},{"size":1300,"mtime":1659088548848,"results":"37","hashOfConfig":"23"},{"size":1075,"mtime":1659075647516,"results":"38","hashOfConfig":"23"},{"size":556,"mtime":1659088228229,"results":"39","hashOfConfig":"23"},{"size":2311,"mtime":1660653386061,"results":"40","hashOfConfig":"23"},{"size":2708,"mtime":1659421230486,"results":"41","hashOfConfig":"23"},{"size":1598,"mtime":1660717816418,"results":"42","hashOfConfig":"23"},{"size":271,"mtime":1660716129153,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},"13uwc4k",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"48"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ampleworks/Documents/register_login_redux/my-app/src/index.js",["113"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport configureStore from './store';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from './store';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { persistStore } from 'redux-persist'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nlet persistor = persistStore(store);\n\nroot.render(\n  <React.StrictMode>\n    <Provider store ={store}>\n    <PersistGate loading={null} persistor={persistor}>\n    <App />\n    </PersistGate>\n    </Provider>\n    \n    \n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// serviceWorker.unregister();",[],"/Users/ampleworks/Documents/register_login_redux/my-app/src/App.js",["114"],[],"/Users/ampleworks/Documents/register_login_redux/my-app/src/reportWebVitals.js",[],[],"/Users/ampleworks/Documents/register_login_redux/my-app/src/store/index.js",[],[],"/Users/ampleworks/Documents/register_login_redux/my-app/src/constants/actionTypes.js",[],[],"/Users/ampleworks/Documents/register_login_redux/my-app/src/screens/Register.js",["115","116","117","118","119","120","121","122","123","124","125"],[],"import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\n// import {withRouter} from \"react-router-dom\";\nimport { REGEX } from \"../utils/Regex\";\nimport { actionCreators, AddUser } from \"../actions/user\";\nimport { useNavigate } from \"react-router-dom\";\nimport { axios } from \"axios\";\n\nconst RightContent = ({AddUser}) => {\n\n  const navigate = useNavigate();\n  const navigate1 = useNavigate();\n  const navigate2 = useNavigate();\n\n  const [inpval, setInpval] = useState({\n    name: \"\",\n    email: \"\",\n    username: \"\",\n    mobile: \"\",\n    city: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    const { name, username, mobile, email, city, confirmPassword, password } = inpval;\n\n    // console.log(\"bbvb===>\", REGEX.email.test(email));\n    if (name === \"\") {\n      alert(\"please fill this name field\")\n        \n      }\n    else if (!REGEX.email.test(email))\n      alert(\"please enter valid email format\");\n    else if (username === \"\") alert(\"please fill this user name field\");\n    else if (mobile === \"\") alert(\"please fill this required field\");\n    else if (mobile.length !== 10)\n      alert(\"please enter valid length (10) mobile number\");\n    else if (city == \"\") alert(\"required this field\");\n    else if (password == \"\") alert(\"please fill this password field\");\n    else if (!password.match(/[A-Z]/))\n      alert(\"please enter at least one uppercase letter\");\n    else if (!password.match(/[a-z]/))\n      alert(\"please enter at least one lowercase letter\");\n    else if (password.length != 8) alert(\"please enter At least 8 characters\");\n    else if (!password.match(/[\\d`~!@#$%\\^&*()+=|;:'\",.<>\\/?\\\\\\-]/))\n      alert(\"please enter At least 1 number or special character\");\n    else if (confirmPassword == \"\")\n      alert(\"please fill this confirm password field\");\n    else if (password !== confirmPassword)\n      alert(\"Doesn't match your password . please check again\");\n    else {\n     \n      let newUser = {\n        name: inpval.name,\n        username: inpval.username,\n        email: inpval.email,\n        mobile: inpval.mobile,\n        city: inpval.city,\n        password: inpval.password,\n        \n      };\n\n      \n   console.log(\"Register console data ===>\" , newUser);\n     navigate(\"/Login\");\n     \n     AddUser(newUser);\n      // adduser(newUser);\n      setInpval((prev) => ({ ...prev, name: \"\", username: \"\", mobile: \"\",  email: \"\",  city: \"\", confirmPassword: \"\",password: \"\",  }));\n      \n    } \n }\n  const handleDashboard =() =>{\n  navigate1(\"/Dashboard\")\n  }\n\n  const handleView =() =>{\n   navigate2(\"/ViewUser\")\n  }\n\n  return (\n    <div>\n      <form method=\"post\"> \n        \n        <div className=\"container\">\n        <h1>Registration Form </h1>\n        <hr></hr>\n        <label htmlFor=\"name\" className=\"label\">\n          Name :\n        </label>\n     \n          <input\n            type=\"text\"\n            placeholder=\"Enter  Name\"\n            value={inpval.name}\n            className=\"form-control\"\n            onChange={(e) =>\n              setInpval((prev) => ({ ...prev, name: e.target.value }))\n            }\n          ></input>\n\n          <label htmlFor=\"email\" className=\"label\">\n            {\" \"}\n            Email:{\" \"}\n          </label>\n          <input\n            type=\"email\"\n            placeholder=\"Enter email\"\n            className=\"form-control\"\n            value={inpval.email}\n            onChange={(e) =>\n              setInpval((prev) => ({ ...prev, email: e.target.value }))\n            }\n          ></input>\n\n          <label htmlFor=\"username\" className=\"label\">\n            User Name :{\" \"}\n          </label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter User Name\"\n            className=\"form-control\"\n            value={inpval.username}\n            onChange={(e) =>\n              setInpval((prev) => ({ ...prev, username: e.target.value }))\n            }\n          ></input>\n\n          <label htmlFor=\"mobile\" className=\"label\">\n            Mobile :{\" \"}\n          </label>\n          <input\n            type=\"number\"\n            placeholder=\"Enter mobile no.\"\n            value={inpval.mobile}\n            className=\"form-control\"\n            maxLength=\"10\"\n            onChange={(e) =>\n              setInpval((prev) => ({ ...prev, mobile: e.target.value }))\n            }\n          ></input>\n\n          <label htmlFor=\"city\" className=\"label\">\n            City:{\" \"}\n          </label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter city\"\n            className=\"form-control\"\n            value={inpval.city}\n            onChange={(e) =>\n              setInpval((prev) => ({ ...prev, city: e.target.value }))\n            }\n          ></input>\n\n          <label htmlFor=\"password\" className=\"label\">\n            Password :\n          </label>\n          <input\n            type=\"password\"\n            placeholder=\"Enter password\"\n            className=\"form-control\"\n            value={inpval.password}\n            onChange={(e) =>\n              setInpval((prev) => ({ ...prev, password: e.target.value }))\n            }\n          ></input>\n\n          <label htmlFor=\"confirmpassword\" className=\"label\">\n            Confirm Password :{\" \"}\n          </label>\n          <input\n            type=\"password\"\n            placeholder=\"Enter confirm password\"\n            className=\"form-control\"\n            value={inpval.confirmPassword}\n            onChange={(e) =>\n              setInpval((prev) => ({\n                ...prev,\n                confirmPassword: e.target.value,\n              }))\n            }\n          ></input>\n\n          <br></br>\n          <button className=\"btn btn-primary\" onClick={handleClick} >\n            Register\n          </button>\n          &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n          <button className=\"btn btn-secondary\" onClick={handleDashboard}>Go to Dashboard</button>\n          &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n          <button className=\"btn btn-danger\" onClick={handleView}>View Users</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // adduser: (data) => dispatch(actionCreators.registerUser(data)),\n    AddUser: (data) => dispatch(AddUser(data))\n  }\n}\n\nconst LoginContainer = connect(null, mapDispatchToProps)(RightContent)\n\nexport default LoginContainer\n// export default RightContent;\n","/Users/ampleworks/Documents/register_login_redux/my-app/src/screens/Login.js",["126","127","128"],[],"import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AddUser, LoginUser } from \"../actions/user\";\nimport { REGEX } from \"../utils/Regex\";\nimport { useNavigate } from \"react-router-dom\";\nconst Login = ({ loginDetail }) => {\n  const navigate = useNavigate();\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  var getemail = JSON.parse(localStorage.getItem(\"email token\"));\n  var getpassword = JSON.parse(localStorage.getItem(\"password token\"));\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { email, password } = data;\n    if (!REGEX.email.test(email)) alert(\"enter valid email\");\n    else if (password.length > \"8\") alert(\"please enter At least 8 characters\");\n    else if (data.email == getemail && data.password == getpassword) {\n      let details = {\n        email: data.email,\n        password: data.password,\n      };\n      console.log(details);\n      loginDetail(details);\n\n      navigate(\"/UserProfile\");\n    } else {\n      alert(\"Invalid credentials please check your email and password\");\n    }\n  };\n\n  return (\n    <div>\n    \n      <div className=\"container\">\n      <h1>Login Page</h1>\n      <hr></hr>\n        <label htmlFor=\"email\" className=\"label\">\n          {\" \"}\n          Email:{\" \"}\n        </label>\n        <input\n          type=\"email\"\n          placeholder=\"Enter email\"\n          className=\"form-control\"\n          autoComplete=\"off\"\n          onChange={(e) =>\n            setData((prev) => ({ ...prev, email: e.target.value }))\n          }\n        ></input>\n\n        <label htmlFor=\"password\" className=\"label\">\n          Password :{\" \"}\n        </label>\n        <input\n          type=\"password\"\n          placeholder=\"Enter password\"\n          className=\"form-control\"\n          autoComplete=\"off\"\n          minLength={8}\n          onChange={(e) =>\n            setData((prev) => ({ ...prev, password: e.target.value }))\n          }\n        ></input>\n        <br></br>\n        <button onClick={handleSubmit} className=\"btn btn-primary\">\n          Submit\n        </button>\n      </div>\n      {/* <p>If you are new user then click on this button</p> */}\n      {/* <button onClick={ handleClick}>Register</button> */}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loginDetail: (loginData) => dispatch(LoginUser(loginData)),\n  };\n};\nconst loginStore = connect(null, mapDispatchToProps)(Login);\nexport default loginStore;\n","/Users/ampleworks/Documents/register_login_redux/my-app/src/utils/Regex.js",[],[],"/Users/ampleworks/Documents/register_login_redux/my-app/src/reducers/user.js",[],[],"/Users/ampleworks/Documents/register_login_redux/my-app/src/screens/Home.js",[],[],"/Users/ampleworks/Documents/register_login_redux/my-app/src/actions/user.js",["129","130","131"],[],"/Users/ampleworks/Documents/register_login_redux/my-app/src/api/api.js",[],[],"/Users/ampleworks/Documents/register_login_redux/my-app/src/api/config.js",[],[],"/Users/ampleworks/Documents/register_login_redux/my-app/src/screens/AddItem.js",["132","133","134","135","136","137","138","139","140","141","142","143","144","145"],[],"/Users/ampleworks/Documents/register_login_redux/my-app/src/screens/ViewList.js",[],[],"/Users/ampleworks/Documents/register_login_redux/my-app/src/reducers/additem.js",["146"],[],"import { Action } from \"history\";\nimport { ADD_ITEM, GET_ITEM } from \"../constants/actionTypes\";\n\nconst initialState = {\n    additem :{\n        name :'',\n        googleReviews :'',\n        googleRating :0,\n        itemNumber :0,\n        description :'',\n        address :'',\n        city :'',\n        state :'',\n        zipCode :'',\n        userId :'',\n        itineraryId :'',\n        itineraryDayId :'',\n        location :[0]\n    }\n}\nconst AddReducer = (state = initialState , action) =>{\n    switch(action.type){\n        case ADD_ITEM:\n          let addItemData = action.user2\n          console.log(\"additem data==>>>>\", addItemData);\n          return{\n            ...state,\n            additem : addItemData,\n            \n          }\n          case GET_ITEM:\n            let getItemData = action.user2\n            console.log(\"getItem data===>>>>\", getItemData);\n            return {\n                ...state,\n              additem : getItemData \n            }\n           default :\n           return  {\n            ...state\n           }\n    }\n}\n\nexport default AddReducer","/Users/ampleworks/Documents/register_login_redux/my-app/src/screens/Dashboard.js",[],[],"/Users/ampleworks/Documents/register_login_redux/my-app/src/screens/UserProfile.js",["147","148","149","150"],[],"/Users/ampleworks/Documents/register_login_redux/my-app/src/screens/Edit.js",["151","152","153","154","155"],[],"import React, { useEffect, useState } from 'react'\nimport { Navigate, useNavigate, useParams } from 'react-router-dom'\nimport { config } from '../api/config';\nimport { connect } from 'react-redux';\nimport { EditProfile, UserProfile } from '../actions/user';\nconst Edit = ({userDetails , EditProfile}) => {\nconst navigation = useNavigate();\n    const[useredit , setUseredit] = useState({\n        name : userDetails.name,\n        email : userDetails.email,\n        username :userDetails.username,\n        city : userDetails.city,\n        mobile :userDetails.mobile\n    })\n \n\n  \n  const handleUpdate =() =>{\n  \n  const data ={\n    name:useredit.name,\n    email:useredit.email,\n    username:useredit.username,\n    city : useredit.city,\n    mobile : useredit.mobile,\n    id: userDetails.id\n  }\n   EditProfile(data);\n   navigation(\"/UserProfile\")\n  }\n  return (\n    <div>\n        <div className='container'>\n       <h1>Users Edit</h1>\n       <hr></hr>\n<label htmlFor=\"name\" className=\"label\">  Name : </label>\n        <input type=\"text\"  className=\"form-control \" value={useredit.name} onChange={(e) =>\n              setUseredit((prev) => ({ ...prev, name: e.target.value }))\n            }></input>\n\n        <label htmlFor=\"name\" className=\"label\">  Email : </label>\n        <input type=\"text\"  className=\"form-control\" value={useredit.email} onChange={(e) =>\n              setUseredit((prev) => ({ ...prev, email: e.target.value }))\n            }></input>\n\n        <label htmlFor=\"name\" className=\"label\">  User Name : </label>\n        <input type=\"text\"  className=\"form-control\"  value={useredit.username} onChange={(e) =>\n              setUseredit((prev) => ({ ...prev, username: e.target.value }))\n            }></input>\n\n        <label htmlFor=\"name\" className=\"label\">  City : </label>\n        <input type=\"text\"  className=\"form-control\" value={useredit.city} onChange={(e) =>\n              setUseredit((prev) => ({ ...prev, city: e.target.value }))\n            }></input>\n\n        <label htmlFor=\"name\" className=\"label\">  Phone no. : </label>\n        <input type=\"text\"  className=\"form-control\" value={useredit.mobile} onChange={(e) =>\n              setUseredit((prev) => ({ ...prev, mobile: e.target.value }))\n            }></input><br></br>\n        <button className='btn btn-dark btn-lg' onClick={handleUpdate} >Update</button>\n        </div>\n    </div>\n  )\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      EditProfile: (data) => dispatch(EditProfile(data)),\n    };\n  };\n  \n  const mapStateToProps = (state) => {\n    return {\n      userDetails: state.userDetails.user,\n    };\n  };\n  \n  const itemStore = connect(mapStateToProps, mapDispatchToProps)(Edit);\n  export default itemStore;\n\n","/Users/ampleworks/Documents/register_login_redux/my-app/src/screens/ViewUser.js",["156"],[],"/Users/ampleworks/Documents/register_login_redux/my-app/src/utils/PrivateRoute.js",[],[],{"ruleId":"157","severity":1,"message":"158","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":22},{"ruleId":"157","severity":1,"message":"161","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":12},{"ruleId":"157","severity":1,"message":"162","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":26},{"ruleId":"157","severity":1,"message":"163","line":2,"column":19,"nodeType":"159","messageId":"160","endLine":2,"endColumn":30},{"ruleId":"157","severity":1,"message":"164","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":24},{"ruleId":"157","severity":1,"message":"165","line":7,"column":10,"nodeType":"159","messageId":"160","endLine":7,"endColumn":15},{"ruleId":"166","severity":1,"message":"167","line":40,"column":19,"nodeType":"168","messageId":"169","endLine":40,"endColumn":21},{"ruleId":"166","severity":1,"message":"167","line":41,"column":23,"nodeType":"168","messageId":"169","endLine":41,"endColumn":25},{"ruleId":"166","severity":1,"message":"170","line":46,"column":30,"nodeType":"168","messageId":"169","endLine":46,"endColumn":32},{"ruleId":"171","severity":1,"message":"172","line":47,"column":41,"nodeType":"173","messageId":"174","endLine":47,"endColumn":42,"suggestions":"175"},{"ruleId":"171","severity":1,"message":"176","line":47,"column":58,"nodeType":"173","messageId":"174","endLine":47,"endColumn":59,"suggestions":"177"},{"ruleId":"171","severity":1,"message":"178","line":47,"column":63,"nodeType":"173","messageId":"174","endLine":47,"endColumn":64,"suggestions":"179"},{"ruleId":"166","severity":1,"message":"167","line":49,"column":30,"nodeType":"168","messageId":"169","endLine":49,"endColumn":32},{"ruleId":"157","severity":1,"message":"180","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":17},{"ruleId":"166","severity":1,"message":"167","line":20,"column":25,"nodeType":"168","messageId":"169","endLine":20,"endColumn":27},{"ruleId":"166","severity":1,"message":"167","line":20,"column":54,"nodeType":"168","messageId":"169","endLine":20,"endColumn":56},{"ruleId":"157","severity":1,"message":"181","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":13},{"ruleId":"157","severity":1,"message":"182","line":22,"column":12,"nodeType":"159","messageId":"160","endLine":22,"endColumn":17},{"ruleId":"157","severity":1,"message":"183","line":24,"column":12,"nodeType":"159","messageId":"160","endLine":24,"endColumn":20},{"ruleId":"166","severity":1,"message":"167","line":29,"column":11,"nodeType":"168","messageId":"169","endLine":29,"endColumn":13},{"ruleId":"166","severity":1,"message":"167","line":32,"column":25,"nodeType":"168","messageId":"169","endLine":32,"endColumn":27},{"ruleId":"166","severity":1,"message":"167","line":35,"column":24,"nodeType":"168","messageId":"169","endLine":35,"endColumn":26},{"ruleId":"166","severity":1,"message":"167","line":38,"column":22,"nodeType":"168","messageId":"169","endLine":38,"endColumn":24},{"ruleId":"166","severity":1,"message":"167","line":42,"column":23,"nodeType":"168","messageId":"169","endLine":42,"endColumn":25},{"ruleId":"166","severity":1,"message":"167","line":45,"column":19,"nodeType":"168","messageId":"169","endLine":45,"endColumn":21},{"ruleId":"166","severity":1,"message":"167","line":48,"column":16,"nodeType":"168","messageId":"169","endLine":48,"endColumn":18},{"ruleId":"166","severity":1,"message":"167","line":51,"column":17,"nodeType":"168","messageId":"169","endLine":51,"endColumn":19},{"ruleId":"166","severity":1,"message":"167","line":54,"column":19,"nodeType":"168","messageId":"169","endLine":54,"endColumn":21},{"ruleId":"166","severity":1,"message":"167","line":57,"column":19,"nodeType":"168","messageId":"169","endLine":57,"endColumn":21},{"ruleId":"166","severity":1,"message":"167","line":60,"column":18,"nodeType":"168","messageId":"169","endLine":60,"endColumn":20},{"ruleId":"166","severity":1,"message":"167","line":63,"column":23,"nodeType":"168","messageId":"169","endLine":63,"endColumn":25},{"ruleId":"166","severity":1,"message":"167","line":66,"column":26,"nodeType":"168","messageId":"169","endLine":66,"endColumn":28},{"ruleId":"166","severity":1,"message":"167","line":69,"column":20,"nodeType":"168","messageId":"169","endLine":69,"endColumn":22},{"ruleId":"157","severity":1,"message":"184","line":1,"column":10,"nodeType":"159","messageId":"160","endLine":1,"endColumn":16},{"ruleId":"157","severity":1,"message":"165","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"157","severity":1,"message":"185","line":3,"column":21,"nodeType":"159","messageId":"160","endLine":3,"endColumn":29},{"ruleId":"157","severity":1,"message":"186","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":13,"column":6,"nodeType":"189","endLine":13,"endColumn":8,"suggestions":"190"},{"ruleId":"157","severity":1,"message":"162","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":26},{"ruleId":"157","severity":1,"message":"191","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":18},{"ruleId":"157","severity":1,"message":"192","line":2,"column":33,"nodeType":"159","messageId":"160","endLine":2,"endColumn":42},{"ruleId":"157","severity":1,"message":"186","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":16},{"ruleId":"157","severity":1,"message":"193","line":5,"column":23,"nodeType":"159","messageId":"160","endLine":5,"endColumn":34},{"ruleId":"157","severity":1,"message":"194","line":4,"column":31,"nodeType":"159","messageId":"160","endLine":4,"endColumn":38},"no-unused-vars","'configureStore' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'actionCreators' is defined but never used.","'axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-useless-escape","Unnecessary escape character: \\^.","Literal","unnecessaryEscape",["195","196"],"Unnecessary escape character: \\/.",["197","198"],"Unnecessary escape character: \\-.",["199","200"],"'AddUser' is defined but never used.","'API' is defined but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'Action' is defined but never used.","'useState' is defined but never used.","'config' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'UserProfile'. Either include it or remove the dependency array. If 'UserProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["201"],"'Navigate' is defined but never used.","'useParams' is defined but never used.","'UserProfile' is defined but never used.","'GetItem' is defined but never used.",{"messageId":"202","fix":"203","desc":"204"},{"messageId":"205","fix":"206","desc":"207"},{"messageId":"202","fix":"208","desc":"204"},{"messageId":"205","fix":"209","desc":"207"},{"messageId":"202","fix":"210","desc":"204"},{"messageId":"205","fix":"211","desc":"207"},{"desc":"212","fix":"213"},"removeEscape",{"range":"214","text":"215"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"216","text":"217"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"218","text":"215"},{"range":"219","text":"217"},{"range":"220","text":"215"},{"range":"221","text":"217"},"Update the dependencies array to be: [UserProfile]",{"range":"222","text":"223"},[1694,1695],"",[1694,1694],"\\",[1711,1712],[1711,1711],[1716,1717],[1716,1716],[445,447],"[UserProfile]"]