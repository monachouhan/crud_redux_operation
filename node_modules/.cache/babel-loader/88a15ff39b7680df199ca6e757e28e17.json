{"ast":null,"code":"import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport profile from '../reducers/user';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  storage: storage\n};\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV === `development`) {\n  const {\n    logger\n  } = require(`redux-logger`);\n\n  middlewares.push(logger);\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst rootReducer = combineReducers({\n  user: profile\n});\nexport default (() => {\n  let store = createStore(persistedReducer, applyMiddleware(...middlewares));\n  let persistor = persistStore(store);\n  return {\n    store,\n    persistor,\n    rootReducer\n  };\n}); // const configureStore = () =>{\n//     return createStore(rootReducer , applyMiddleware(thunk))\n// }","map":{"version":3,"names":["createStore","combineReducers","compose","applyMiddleware","thunk","profile","persistStore","persistReducer","storage","persistConfig","key","middlewares","process","env","NODE_ENV","logger","require","push","persistedReducer","rootReducer","user","store","persistor"],"sources":["/Users/ampleworks/Documents/register_login_redux/my-app/src/store/index.js"],"sourcesContent":["import {createStore , combineReducers , compose , applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk'\nimport profile from '../reducers/user'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n }\n const middlewares = [thunk];\n\n if (process.env.NODE_ENV === `development`) {\n    const { logger } = require(`redux-logger`);\n \n    middlewares.push(logger);\n }\n\n const persistedReducer = persistReducer(persistConfig, rootReducer)\nconst rootReducer = combineReducers({\n    user : profile,\n});\n\nexport default () => {\n    let store = createStore(\n      persistedReducer,\n      applyMiddleware(...middlewares)\n    )\n \n    let persistor = persistStore(store)\n    return { store, persistor , rootReducer }\n }\n\n// const configureStore = () =>{\n//     return createStore(rootReducer , applyMiddleware(thunk))\n// }\n\n"],"mappings":"AAAA,SAAQA,WAAR,EAAsBC,eAAtB,EAAwCC,OAAxC,EAAkDC,eAAlD,QAAwE,OAAxE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,MADa;EAElBF,OAAO,EAAEA;AAFS,CAAtB;AAIC,MAAMG,WAAW,GAAG,CAACP,KAAD,CAApB;;AAEA,IAAIQ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAA0B,aAA9B,EAA4C;EACzC,MAAM;IAAEC;EAAF,IAAaC,OAAO,CAAE,cAAF,CAA1B;;EAEAL,WAAW,CAACM,IAAZ,CAAiBF,MAAjB;AACF;;AAED,MAAMG,gBAAgB,GAAGX,cAAc,CAACE,aAAD,EAAgBU,WAAhB,CAAvC;AACD,MAAMA,WAAW,GAAGlB,eAAe,CAAC;EAChCmB,IAAI,EAAGf;AADyB,CAAD,CAAnC;AAIA,gBAAe,MAAM;EACjB,IAAIgB,KAAK,GAAGrB,WAAW,CACrBkB,gBADqB,EAErBf,eAAe,CAAC,GAAGQ,WAAJ,CAFM,CAAvB;EAKA,IAAIW,SAAS,GAAGhB,YAAY,CAACe,KAAD,CAA5B;EACA,OAAO;IAAEA,KAAF;IAASC,SAAT;IAAqBH;EAArB,CAAP;AACF,CARF,E,CAUA;AACA;AACA"},"metadata":{},"sourceType":"module"}